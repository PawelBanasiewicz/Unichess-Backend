plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'banasiewicz.pawel'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.h2database:h2'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.register('unitTest', Test) {
	description = "Run unit tests"
	group = "verification"
	include 'banasiewicz/pawel/Unichess/Backend/unit/**'
	useJUnitPlatform()
}

tasks.register('integrationTest', Test) {
	description = "Run integration tests"
	group = "verification"
	include 'banasiewicz/pawel/Unichess/Backend/integration/**'
	useJUnitPlatform()
	shouldRunAfter 'unitTest'
}

tasks.register('allTests') {
	description = "Run all tests (unit + integration)"
	group = "verification"
	dependsOn 'unitTest', 'integrationTest'
}

tasks.named('test') {
	useJUnitPlatform()

	jvmArgs '-XX:+EnableDynamicAgentLoading'
}
